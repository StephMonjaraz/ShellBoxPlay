----------------------------------------
üß† METODOLOG√çA GENERAL PARA NUESTROS PROGRAMAS SCRIPT BASH.

PASOS A SEGUIR:

--------------------------------------------------------------------------------------------
                                  1. PLANTEAMIENTO DEL PROBLEMA
--------------------------------------------------------------------------------------------
Antes de escribir c√≥digo, responderemos las siguientes preguntas:
- ¬øQu√© problema quiero resolver con el script?
- ¬øCu√°l es el comportamiento esperado?
- ¬øQu√© datos necesito que el usuario proporcione?
- ¬øQu√© salidas o resultados debe mostrar el script?

Ejemplo:
Simularemos un sistema de autenticaci√≥n para poder verificar que el usuario y contrase√±a son los correctos, para la simulaci√≥n haremos un archivo de texto y ah√≠ guardaremos las credenciales.

---------------------------------------------------------------------------------------------
                                 2. DEFINIR ENTRADAS Y SALIDAS
---------------------------------------------------------------------------------------------
Especifica:
- ¬øQu√© datos debe pedir el script al usuario (entrada)?
- ¬øC√≥mo y d√≥nde se almacenar√°n esos datos necesarios?
- ¬øQu√© mostrar√° el script en pantalla (salida)?

Ejemplo:
Entrada: nombre de usuario y contrase√±a.
Salida: mensaje de acceso concedido o denegado.

--------------------------------------------------------------------------------------------
                                3. IDENTIFICACI√ìN DE VARIABLES
--------------------------------------------------------------------------------------------
Pensemos en que variables necesitaremos, tambi√©n, el tiempo que las usaremos:
- ¬øQu√© valores debes guardar temporalmente?
- ¬øHay l√≠mites, como n√∫mero de intentos?

Ejemplo:
- user_input
- password_input
- remaining_attempts
- user_file

---------------------------------------------------------------------------------------------
                             4. DISE√ëAR LA ESTRUCTURA DEL SCRIPT
---------------------------------------------------------------------------------------------
Dividiremos el script en bloques de l√≥gica:
- Inicio (mensaje de bienvenida)
- Entrada de datos
- Comparaci√≥n y validaci√≥n
- Resultados (√©xito o error)
- Registro/log (opcional)

Sugiero empezar como un esquema o lista, sin c√≥digo todav√≠a.

---------------------------------------------------------------------------------------------
                             5. DISE√ëAR LAS FUNCIONES (si aplica)
---------------------------------------------------------------------------------------------
Agruparemos bloques de l√≥gica en funciones que podemos usar a lo largo del script:
read_user_data()
validate_credentials()
display_success_message()
display_error_message()
log_user_login()

---------------------------------------------------------------------------------------------
                            6. DISE√ëAR EL FLUJO PRINCIPAL (main)
---------------------------------------------------------------------------------------------
Definiremos el orden en que se deben ejecutar todas las partes:
- Mostrar bienvenida.
- Mientras queden intentos:
   - Leer datos.
   - Validar credenciales.
   - Mostrar mensajes seg√∫n el resultado.
- Finalizar si se acaban los intentos.

---------------------------------------------------------------------------------------------
                                7. VERIFICACI√ìN Y PRUEBAS
---------------------------------------------------------------------------------------------
Antes de automatizar, pensemos si:
- ¬øTu l√≥gica considera errores del usuario?
- ¬øQu√© pasa si deja un campo vac√≠o?
- ¬øQu√© ocurre si el archivo de usuarios no existe?

Propongo hacer un esquema de prueba antes de que escribamos el c√≥digo.

---------------------------------------------------------------------------------------------
                                   8. IMPLEMENTAR EL C√ìDIGO
---------------------------------------------------------------------------------------------
Lo haremos paso por paso, validando cada bloque antes de seguir con el siguiente.

---------------------------------------------------------------------------------------------
                              9. COMENTARIOS Y DOCUMENTACI√ìN
---------------------------------------------------------------------------------------------
Agregaremos comentarios explicativos:
- Al inicio del archivo (qu√© hace el script).
- Antes de cada bloque importante.

---------------------------------------------------------------------------------------------
                               10. REVISI√ìN FINAL Y AJUSTES
---------------------------------------------------------------------------------------------
- Ejecutamos el script varias veces con distintos datos.
- Revisamos que los mensajes se vean bien y su dise√±o.
- Verificaremos que las condiciones de error est√°n bien controladas.
- Aseg√∫rate de que tenga permiso (chmod +x)



